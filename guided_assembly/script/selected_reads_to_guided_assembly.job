#!/bin/bash
#$ -S /bin/bash
#$ -N MitoAsm
#$ -cwd
#$ -pe smp 24
#$ -V
#$ -e ./logfiles/selected_reads.log
#$ -o ./logfiles/selected_reads.out
#$ -m e
# This is a script to carry out assembly
# the reads generated by `diluting_overlap`.
# Make sure that you've selected the reads from all data set
# by diluting overlaps.
# For more information, reads article on esa.io.
# Currently, only sequel dataset is treated, because
# the sequencing apparatus would be sequel II in the future plan.
set -ue

### Variables

SEQUEL=/grid/ban-m/arabidopsis_thaliana/sequel/dilution_onthefly2/selected_2nd.fq
SEQUEL_OUTPUT=/grid/ban-m/arabidopsis_thaliana/sequel/guided_asm_dilution/

### ==== Preprocess =====

mkdir -p ${SEQUEL_OUTPUT}


#### ==== Calculate Stats for each readset =====

# echo -e "Name\t# of read\tmax length\tmin length\tN50\tTotal\tMean length\tEst.cov" > ${SEQUEL_OUTPUT}/whole_read_summary.tsv
# read_statistics ${SEQUEL} 400000 sequel_whole >> ${SEQUEL_OUTPUT}/whole_read_summary.tsv

# K=32
# jellyfish count -m 32 -s 100M -t 12 -o ${SEQUEL_OUTPUT}/sequel_${K}mer_freq.jf --bf-size 10G ${SEQUEL}
# jellyfish histo -o ${SEQUEL_OUTPUT}/sequel_${K}mer_freq.tsv -t 12 ${SEQUEL_OUTPUT}/sequel_${K}mer_freq.jf

#### ==== Canu =====

# rm -rf ${SEQUEL_OUTPUT}/canu/
# mkdir -p ${SEQUEL_OUTPUT}/canu/
# qsub -o ${SEQUEL_OUTPUT}/canu_sequel.out -e ${SEQUEL_OUTPUT}/canu_sequel.log \
#      ./script/canu.job \
#      ${SEQUEL_OUTPUT}/canu \
#      guided_asm_sequel_canu \
#      -pacbio-raw \
#      ${SEQUEL}

#### ==== Ra ======
rm -rf ${SEQUEL_OUTPUT}/ra/
mkdir -p ${SEQUEL_OUTPUT}/ra/
qsub -o ${SEQUEL_OUTPUT}/ra_sequel.out -e ${SEQUEL_OUTPUT}/ra_sequel.log \
     ./script/ra.job \
     ${SEQUEL_OUTPUT}/ra \
     pb \
     ${SEQUEL} \
     guided_asm_sequel_ra.fa


#### ==== Wtdbg2 =====

# rm -rf ${SEQUEL_OUTPUT}/wtdbg2
# mkdir -p ${SEQUEL_OUTPUT}/wtdbg2
# qsub -o ${SEQUEL_OUTPUT}/wtdbg2_sequel.out -e ${SEQUEL_OUTPUT}/wtdbg2_sequel.log \
#      ./script/wtdbg2.job \
#      ${SEQUEL_OUTPUT}/wtdbg2 \
#      sequel \
#      ${SEQUEL} \
#      wtdbg2_sequel \
#      map-pb 

#### ===== Flye =======
    
# rm -rf ${SEQUEL_OUTPUT}/flye
# mkdir -p ${SEQUEL_OUTPUT}/flye
# qsub -o ${SEQUEL_OUTPUT}/flye_sequel.out -e ${SEQUEL_OUTPUT}/flye_sequel.log \
#      ./script/flye.job \
#      pacbio-raw \
#      ${SEQUEL} \
#      ${SEQUEL_OUTPUT}/flye \

